<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 可以扫描controller、service、...
	这里让扫描controller，指定controller的包
	 -->
	 
	<context:component-scan base-package="com.zttx.controller,com.zttx.service"></context:component-scan>
	
	<mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven>
 	

	<!-- 视图解析器
	解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包
	 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/"/>
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型转换 -->
				<bean class="com.zttx.converter.CustomDateConverter"/>
			</list>
		</property>
	</bean>
	
	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>52428800</value>
		</property>
	</bean>
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器。顺序执行 -->
		<!-- 登录认证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.zttx.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
		<!-- 其他拦截器 -->
	</mvc:interceptors>
	
	<!-- 校验器 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	<!-- 配置增强 -->
	<aop:config>
		<!-- 2.1配置切入点：用表达式的形式指定对那个方法进行增强 -->
		<aop:pointcut expression="execution(* com.zttx.service.UserService.login(..))" id="pointcut1"/>
		<!-- 2.2配置切面 ：把增强用到方法上面
			ref:增强的对象：增强方法所在类
		-->
		<aop:aspect ref="userServiceStrength">
			<!-- 配置增强类型
			method:增强类里面使用那个方法作为前置 -->
			<!-- <aop:before method="beforeLogin" pointcut-ref="pointcut1"/>
			<aop:after-returning method="afterLogin" pointcut-ref="pointcut1"/> -->
			<!-- <aop:around method="inLogin" pointcut-ref="pointcut1"/> -->
		</aop:aspect>
	</aop:config>
</beans>